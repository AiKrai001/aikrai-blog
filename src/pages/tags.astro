---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import { SITE_TITLE } from '../consts';
import { encodePathSegmentSafe } from '../utils/safeSlug';

// 获取所有博客文章
const posts = await getCollection('blog');

// 统计标签
const tagMap = new Map();
posts.forEach(post => {
  const tags = post.data.tags || [];
  tags.forEach(tag => {
    if (tagMap.has(tag)) {
      tagMap.set(tag, tagMap.get(tag) + 1);
    } else {
      tagMap.set(tag, 1);
    }
  });
});

const tags = Array.from(tagMap.entries()).sort((a, b) => b[1] - a[1]);
---

<BaseLayout title={`标签 - ${SITE_TITLE}`} description="博客文章标签页面">
  <div class="tags-container">
    <header class="page-header">
      <h1>标签</h1>
      <p>共 {tags.length} 个标签，{posts.length} 篇文章</p>
    </header>

    <div class="tags-cloud">
      {tags.map(([tag, count]) => (
        <a href={`/tags/${encodePathSegmentSafe(tag)}/`} class="tag-item" style={`font-size: ${Math.min(1.5, 0.8 + count * 0.2)}rem;`}>
          #{tag}
          <span class="tag-count">({count})</span>
        </a>
      ))}
    </div>

    {tags.length === 0 && (
      <div class="empty-state">
        <i class="fas fa-tags"></i>
        <p>暂无标签</p>
      </div>
    )}
  </div>
</BaseLayout>

<style>
  .tags-container {
    max-width: var(--content-max-width);
    margin: 0 auto;
    padding: 0 var(--spacing-4);
  }

  .page-header {
    text-align: center;
    margin-bottom: var(--spacing-8);
  }

  .page-header h1 {
    font-size: var(--font-size-3xl);
    font-weight: var(--font-weight-bold);
    margin-bottom: var(--spacing-4);
    color: var(--text-color);
  }

  .page-header p {
    font-size: var(--font-size-lg);
    color: var(--text-muted);
  }

  .tags-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-3);
    justify-content: center;
    align-items: center;
    padding: var(--spacing-8);
    background-color: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-sm);
  }

  .tag-item {
    display: inline-flex;
    align-items: center;
    padding: var(--spacing-2) var(--spacing-4);
    background-color: var(--tag-bg);
    color: var(--tag-color);
    text-decoration: none;
    border-radius: var(--border-radius-full);
    transition: all var(--transition-fast);
    font-weight: var(--font-weight-medium);
  }

  .tag-item:hover {
    background-color: var(--primary-color);
    color: white;
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
  }

  .tag-count {
    margin-left: var(--spacing-1);
    font-size: 0.85em;
    opacity: 0.8;
  }

  .empty-state {
    text-align: center;
    padding: var(--spacing-12) var(--spacing-4);
    color: var(--text-muted);
  }

  .empty-state i {
    font-size: 3rem;
    margin-bottom: var(--spacing-4);
    opacity: 0.5;
  }

  .empty-state p {
    font-size: var(--font-size-lg);
    margin: 0;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .tags-cloud {
      padding: var(--spacing-6);
      gap: var(--spacing-2);
    }

    .tag-item {
      font-size: var(--font-size-sm) !important;
      padding: var(--spacing-1) var(--spacing-3);
    }
  }
</style>
